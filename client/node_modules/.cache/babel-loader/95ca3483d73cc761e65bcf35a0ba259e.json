{"ast":null,"code":"var _jsxFileName = \"/home/guimadev/code/dourasoft/client/src/components/ListRegs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListRegs = () => {\n  _s();\n\n  const [prods, setProds] = useState(\"\"); // The empty array is used for rendering useEffect only once\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const options = {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'text/plain'\n          }\n        };\n        fetch('http://localhost:3001/api/v1/regs', options).then(response => response.json()).then(response => console.log(response)); //.then(response => response.json())\n        //.then(response => setProds(response))\n        //setProds(response.json());\n        //setProds(response);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-group\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover table-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListRegs, \"Wg/6u/H4FP0z0kY0eQFCvDIzqwQ=\");\n\n_c = ListRegs;\nexport default ListRegs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListRegs\");","map":{"version":3,"names":["React","useEffect","useState","ListRegs","prods","setProds","fetchData","options","method","headers","fetch","then","response","json","console","log","error","message"],"sources":["/home/guimadev/code/dourasoft/client/src/components/ListRegs.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\nconst ListRegs = () => {\n    const [prods, setProds] = useState(\"\");\n    \n    // The empty array is used for rendering useEffect only once\n    useEffect ( () => {\n        const fetchData = async () => {\n            try {\n                const options = {method: 'GET', headers: {'Content-Type': 'text/plain'}};\n                fetch('http://localhost:3001/api/v1/regs', options)\n                .then(response => response.json())\n                .then(response => console.log(response))\n                //.then(response => response.json())\n                //.then(response => setProds(response))\n                //setProds(response.json());\n\n\n                //setProds(response);\n            } catch (error) {\n                console.log(error.message)\n            }\n        }\n        fetchData();\n\n    }, []);\n\n    return (\n        <div className=\"list-group\">\n            <table className=\"table table-hover table-dark\">\n                <thead>\n                    <tr className=\"bg-primary\">\n                        <th scope=\"col\">Code</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Price</th>\n                        <th scope=\"col\">Update</th>\n                        <th scope=\"col\">Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {/*\n                    {prods.map((prod) => {\n                        return (\n                            <tr>\n                                <td>{prod.cod_prod}</td>\n                                <td>{prod.prod_name}</td>\n                                <td>{prod.description}</td>\n                                <td>{prod.price}</td>\n                                <td><button className=\"btn btn-warning\">Update</button></td>\n                                <td><button className=\"btn btn-danger\">Delete</button></td>\n\n                            </tr>\n                        );\n                    })}\n\n                */}\n                \n                </tbody>\n            </table>\n        </div>\n    )    \n}\n\nexport default ListRegs"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC,CADmB,CAGnB;;EACAD,SAAS,CAAG,MAAM;IACd,MAAMK,SAAS,GAAG,YAAY;MAC1B,IAAI;QACA,MAAMC,OAAO,GAAG;UAACC,MAAM,EAAE,KAAT;UAAgBC,OAAO,EAAE;YAAC,gBAAgB;UAAjB;QAAzB,CAAhB;QACAC,KAAK,CAAC,mCAAD,EAAsCH,OAAtC,CAAL,CACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMC,QAAQ,IAAIE,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAFlB,EAFA,CAKA;QACA;QACA;QAGA;MACH,CAXD,CAWE,OAAOI,KAAP,EAAc;QACZF,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAlB;MACH;IACJ,CAfD;;IAgBAX,SAAS;EAEZ,CAnBQ,EAmBN,EAnBM,CAAT;EAqBA,oBACI;IAAK,SAAS,EAAC,YAAf;IAAA,uBACI;MAAO,SAAS,EAAC,8BAAjB;MAAA,wBACI;QAAA,uBACI;UAAI,SAAS,EAAC,YAAd;UAAA,wBACI;YAAI,KAAK,EAAC,KAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAI,KAAK,EAAC,KAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAI,KAAK,EAAC,KAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII;YAAI,KAAK,EAAC,KAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI;YAAI,KAAK,EAAC,KAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ,eAMI;YAAI,KAAK,EAAC,KAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QANJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAWI;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAmCH,CA5DD;;GAAMH,Q;;KAAAA,Q;AA8DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}