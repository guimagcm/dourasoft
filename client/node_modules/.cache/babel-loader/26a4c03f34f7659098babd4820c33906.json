{"ast":null,"code":"var _jsxFileName = \"/home/guimadev/code/dourasoft/client/src/components/ListRegs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListRegs = () => {\n  _s();\n\n  const [prods, setProds] = useState(); // attempt 01\n\n  const addProd = useCallback(el => {\n    setProds(prod => [...prod, el]);\n  }, [prods]); // The empty array is used for rendering useEffect only once\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        async function fetchProds() {\n          const response = await fetch('http://localhost:3001/api/v1/regs');\n          const data = await response.json();\n          await setProds(data.rows); //console.log(data.rows);\n        }\n\n        fetchProds();\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const deleteReg = async id => {\n    const options = {\n      method: 'DELETE'\n    }; //console.log(id)\n\n    const deleteProd = await fetch(`http://localhost:3001/api/v1/regs/${String(id)}`, options); // This should be the easiest way to update react useState, by means of a filter\n    // Filter only those that do not match the deleted element id\n\n    setProds(prods.filter(prod => prod.id !== id));\n    console.log(deleteProd);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-group\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover table-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: prods && prods.map(prod => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: prod.cod_prod\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: prod.prod_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: prod.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: prod.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => deleteReg(prod.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, prod.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListRegs, \"Sqnl+zLE9EUhEiefGVw9KSaGgpU=\");\n\n_c = ListRegs;\nexport default ListRegs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListRegs\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","ListRegs","prods","setProds","addProd","el","prod","fetchData","fetchProds","response","fetch","data","json","rows","error","console","log","message","deleteReg","id","options","method","deleteProd","String","filter","map","cod_prod","prod_name","description","price"],"sources":["/home/guimadev/code/dourasoft/client/src/components/ListRegs.js"],"sourcesContent":["import React, {useEffect, useState, useCallback} from 'react';\n\nconst ListRegs = () => {\n    const [prods, setProds] = useState();\n\n    // attempt 01\n    const addProd = useCallback((el) => {\n        setProds((prod) => [...prod, el]);\n      }, [prods]);\n    \n    // The empty array is used for rendering useEffect only once\n    useEffect ( () => {\n        const fetchData =  async () => {\n            try {\n                    async function fetchProds() {\n                        const response = await fetch('http://localhost:3001/api/v1/regs');\n                        const data = await response.json();\n                        await setProds(data.rows);\n                        //console.log(data.rows);\n                    }\n                    fetchProds();\n\n            } catch (error) {\n                console.log(error.message)\n            }\n        }\n        fetchData();\n\n    }, []);\n    \n    const deleteReg = async (id) => {\n\n        const options = {method: 'DELETE'};\n        //console.log(id)\n        const deleteProd = await fetch(`http://localhost:3001/api/v1/regs/${String(id)}`, options);\n        // This should be the easiest way to update react useState, by means of a filter\n        // Filter only those that do not match the deleted element id\n        setProds(prods.filter(prod=>prod.id !== id));\n        console.log(deleteProd);\n        \n    }\n\n\n    return (\n        <div className=\"list-group\">\n            <table className=\"table table-hover table-dark\">\n                <thead>\n                    <tr className=\"bg-primary\">\n                        <th scope=\"col\">Code</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Price</th>\n                        <th scope=\"col\">Update</th>\n                        <th scope=\"col\">Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {prods && prods.map((prod) => {\n                        return (\n                            <tr key = {prod.id}>\n                                <td>{prod.cod_prod}</td>\n                                <td>{prod.prod_name}</td>\n                                <td>{prod.description}</td>\n                                <td>{prod.price}</td>\n                                <td><button className=\"btn btn-warning\">Update</button></td>\n                                <td><button className=\"btn btn-danger\" onClick={() => deleteReg(prod.id)}>Delete</button></td>\n\n                            </tr>\n                        );\n                    })}\n\n                </tbody>\n            </table>\n        </div>\n    )    \n}\n\nexport default ListRegs"],"mappings":"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"},"metadata":{},"sourceType":"module"}