{"ast":null,"code":"var _jsxFileName = \"/home/guimadev/code/dourasoft/client/src/components/ListCustomers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport EditReg from './EditReg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListCustomers = () => {\n  _s();\n\n  const [customers, setCustomers] = useState(''); // The empty array is used for rendering useEffect only once\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        async function fetchProds() {\n          const response = await fetch('http://localhost:3001/customers/api/v1/cust');\n          const data = await response.json();\n          await setCustomers(data.rows); //console.log(data.rows);\n        }\n\n        fetchProds();\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const deleteReg = async id => {\n    const options = {\n      method: 'DELETE'\n    }; //console.log(id)\n\n    const deleteProd = await fetch(`http://localhost:3001/customers/api/v1/cust/${String(id)}`, options); // This should be the easiest way to update react useState, by means of a filter\n    // Filter only those that do not match the deleted element id\n\n    setCustomers(customers.filter(cust => cust.id !== id));\n    console.log(deleteProd);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-group\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover table-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: customers && customers.map(cust => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: cust.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cust.customer_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cust.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cust.addr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(EditReg, {\n                prod: prod\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => deleteReg(cust.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this)]\n          }, cust.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListCustomers, \"5T+MCr0vHd5gj/EhK+88BOaSw0o=\");\n\n_c = ListCustomers;\nexport default ListCustomers;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCustomers\");","map":{"version":3,"names":["React","useEffect","useState","EditReg","ListCustomers","customers","setCustomers","fetchData","fetchProds","response","fetch","data","json","rows","error","console","log","message","deleteReg","id","options","method","deleteProd","String","filter","cust","map","customer_name","phone","addr","prod"],"sources":["/home/guimadev/code/dourasoft/client/src/components/ListCustomers.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport EditReg from './EditReg';\n\nconst ListCustomers = () => {\n    const [customers, setCustomers] = useState('');\n\n    \n    // The empty array is used for rendering useEffect only once\n    useEffect ( () => {\n        const fetchData =  async () => {\n            try {\n                    async function fetchProds() {\n                        const response = await fetch('http://localhost:3001/customers/api/v1/cust');\n                        const data = await response.json();\n                        await setCustomers(data.rows);\n                        //console.log(data.rows);\n                    }\n                    fetchProds();\n\n            } catch (error) {\n                console.log(error.message)\n            }\n        }\n        fetchData();\n\n    }, []);\n    \n    const deleteReg = async (id) => {\n\n        const options = {method: 'DELETE'};\n        //console.log(id)\n        const deleteProd = await fetch(`http://localhost:3001/customers/api/v1/cust/${String(id)}`, options);\n        // This should be the easiest way to update react useState, by means of a filter\n        // Filter only those that do not match the deleted element id\n        setCustomers(customers.filter(cust=>cust.id !== id));\n        console.log(deleteProd);\n        \n    }\n\n\n    return (\n        <div className=\"list-group\">\n            <table className=\"table table-hover table-dark\">\n                <thead>\n                    <tr className=\"bg-primary\">\n                        <th scope=\"col\">Id</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Address</th>\n                        <th scope=\"col\">Update</th>\n                        <th scope=\"col\">Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {customers && customers.map((cust) => {\n                        return (\n                            <tr key = {cust.id}>\n                                <td>{cust.id}</td>\n                                <td>{cust.customer_name}</td>\n                                <td>{cust.phone}</td>\n                                <td>{cust.addr}</td>\n                                <td><EditReg prod={prod}/></td>\n                                <td><button className=\"btn btn-danger\" onClick={() => deleteReg(cust.id)}>Delete</button></td>\n\n                            </tr>\n                        );\n                    })}\n\n                </tbody>\n            </table>\n        </div>\n    )    \n}\n\nexport default ListCustomers"],"mappings":"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"},"metadata":{},"sourceType":"module"}